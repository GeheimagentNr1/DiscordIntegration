buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath "com.github.jengelman.gradle.plugins:shadow:4.0.4"
    }
}

apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = "${major_version}.${minor_version}.${patch_version}"
group = "${domain}.${mod_id}" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "${mod_id}"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

repositories {
    jcenter()
    maven { url 'https://jitpack.io' }
    maven {
        name = "ModdingMavenRepositories"
        url = "file:../ModdingMavenRepositories"
    }
}

minecraft {

    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: "${mcp_channel}", version: "${mcp_version}-${mcp_mc_version}"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    // accessTransformer = file('build/resources/main/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                discordintegration {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run/server')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                discordintegration {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'discordintegration', '--all', '--output', file('src/generated/resources/')

            mods {
                discordintegration {
                    source sourceSets.main
                }
            }
        }
    }
}
configurations {
    embed
    compile.extendsFrom(embed)
}
shadowJar {
    classifier = '1.14'
    configurations = [project.configurations.embed]
    relocate 'okhttp3', 'dcshadow.okhttp'
    relocate 'okio', 'dcshadow.okio'
    relocate 'club.minnced', 'dcshadow.club.minnced'
    relocate 'com.sun', 'dcshadow.com.sun'
    relocate 'com.iwebpp', 'dcshadow.com.iwebpp'
    relocate 'com.neovisionaries', 'dcshadow.com.neovisionaries'
    relocate 'gnu', 'dcshadow.gnu'
    relocate 'org.apache.commons.collections4', 'dcshadow.apache-collections4'
    relocate 'org.slf4j', 'dcshadow.slf4j'
    relocate 'org.json', 'dcshadow.org.json'
    relocate 'org.intellij', 'dcshadow.intellij'
    relocate 'org.jetbrains', 'dcshadow.jetbrains'
    relocate 'tomp2p', 'dcshadow.tomp2p'
    relocate 'com.fasterxml', 'dcshadow.fasterxml'
}
dependencies {
    minecraft 'net.minecraftforge:forge:1.14.4-28.2.0'
    embed("net.dv8tion:JDA:4.0.0_39")
    embed 'club.minnced:discord-webhooks:0.1.8'
    //deobfCompile "com.feed_the_beast.mods:FTBUtilities:5.+"
    //deobfCompile "com.feed_the_beast.mods:FTBLib:5.+"
    //deobfCompile 'com.github.upcraftlp:votifier:master-SNAPSHOT'
    compileOnly fg.deobf("de.geheimagentnr1.moremobgriefingoptions:MoreMobGriefingOptions-${mc_version}:${mmgo_version}")
    runtimeOnly fg.deobf("de.geheimagentnr1.moremobgriefingoptions:MoreMobGriefingOptions-${mc_version}:${mmgo_version}")
    runtimeOnly fg.deobf("de.geheimagentnr1.dimension_access_manager:DimensionAccessManager-${mc_version}:${dam_version}")
}

reobf {
    shadowJar {
        dependsOn tasks.createMcpToSrg
        mappings = tasks.createMcpToSrg.outputs.files.singleFile
    }
}

artifacts {
    archives tasks.shadowJar
}
jar {
    classifier = "1.14"
    manifest {
        attributes([
                "Specification-Title": "${mod_id}",
                "Specification-Vendor": "${modder}",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"${modder}",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

build.dependsOn(shadowJar)

def reobfFile = file("$buildDir/reobfShadowJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfShadowJar'
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact reobfArtifact
        }
    }
    repositories {
        maven {
            url "file:../ModdingMavenRepositories"
        }
    }
}